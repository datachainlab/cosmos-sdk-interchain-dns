syntax = "proto3";
package ibc.dns.server;

option go_package = "github.com/datachainlab/cosmos-sdk-interchain-dns/x/ibc-dns/server/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "ibc/dns/common/types.proto";

// Query provides defines the gRPC querier service.
service Query {
    // DenomTrace queries a denomination trace information.
    rpc Domains(QueryDomainsRequest) returns (QueryDomainsResponse) {
      option (google.api.http).get = "/ibc_dns/v1beta1/domains";
    }
}

message QueryDomainsRequest {}

message QueryDomainsResponse {
    option (gogoproto.goproto_getters) = false;
    repeated DomainInfo domains = 1 [
        (gogoproto.nullable) = false
    ];
}

message DomainInfo {
    option (gogoproto.goproto_getters) = false;
    string name = 1;
    bytes metadata = 2;
    ibc.dns.common.LocalDNSID dns_id = 3 [
        (gogoproto.nullable) = false
    ];
    ibc.dns.common.LocalChannel channel = 4 [
        (gogoproto.nullable) = false
    ];
}

message QueryDomainRequest {
    option (gogoproto.goproto_getters) = false;
    string name = 1;
}

message QueryDomainResponse {
    option (gogoproto.goproto_getters) = false;
    DomainInfo domain = 1 [
        (gogoproto.nullable) = false
    ];
}
